<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ui:fragment xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui">
	<h:form>

					<p>Alguns desses serviços podem ser automatizados. Por exemplo,
						não é necessário existir um representante de vendas se o seu
						cliente já tem, em mãos, o preço e todos os outros dados
						relevantes para constituir um pedido de compra. Este pedido pode
						e, em muitos casos, já é feito, via interfaces computacionais. O
						cliente entra em seu site, monta o pedido como desejar e confirma
						a compra. Isto é um serviço web, ou seja, um serviço que está
						publicado na web para que qualquer pessoa possa fazer uso. Web
						Services foram criados para construir aplicações deste tipo,
						aplicações que são serviços na internet. Porém não faz parte do
						conceito de Web Service a criação de interfaces gráficas para os
						usuários, deixando esta parte para outras empresas ou pessoas
						desenvolverem. É comum encontrar textos afirmando que Web Services
						disponibilizam serviços somente para desenvolvedores, ou que Web
						Services nada mais são do que chamada de métodos usando XML. Estas
						definições estão corretas. Web Services é a tecnologia ideal para
						comunicação entre sistemas, sendo muito usado em aplicações B2B. A
						comunicação entre os serviços é padronizada possibilitando a
						independencia de plataforma e de linguagem de programação. Por
						exemplo, um sistema de reserva de passagens aéreas feito em Java e
						rodando em um servidor Linux pode acessar, com transparência, um
						serviço de reserva de hotel feito em. Net rodando em um servidor
						Microsoft.</p>

	



	 
  </h:form>
</ui:fragment>